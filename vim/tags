!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/shinc/dotfiles/vim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
<C-a>	maps.vim	/^noremap <C-a> ggVG$/;"	m
<CR>	maps.vim	/^nnoremap <CR> a<CR><Esc>$/;"	m
<M-1>	maps.vim	/^noremap <M-1> :20vs .<CR>$/;"	m
<M-F11>	maps.vim	/^noremap <M-F11> <C-w><C-w>:wq<Enter>$/;"	m
<S-Tab>	maps.vim	/^vnoremap <S-Tab> <gv$/;"	m
<Space>al	maps.vim	/^nnoremap <Space>al i\\begin{align*}<Enter>\\end{align*}<Enter><++><Esc>2kA<ENTER>$/;"	m
<Space>bf	maps.vim	/^nnoremap <Space>bf i\\textbf{}<Esc>T{i$/;"	m
<Space>ct	maps.vim	/^nnoremap <Space>ct bf<Space>a\\cite{} <Esc>T{i$/;"	m
<Space>eq	maps.vim	/^nnoremap <Space>eq i\\begin{equation}<Enter>\\end{equation}<Enter><Esc>2kA<ENTER>$/;"	m
<Space>fn	maps.vim	/^nnoremap <Space>fn i\\footnote{}<Esc>T{i$/;"	m
<Space>fr	maps.vim	/^nnoremap <Space>fr i\\begin{frame}<Enter>\\frametitle{}<Enter>\\end{frame}<Enter><Esc>kkf}i$/;"	m
<Space>it	maps.vim	/^nnoremap <Space>it i\\begin{itemize}<Enter><Enter>\\end{itemize}<Esc>1kA\\item<Space>$/;"	m
<Space>ldoc	maps.vim	/^nnoremap <silent> <Space>ldoc :read $templates\/LatexDoc.txt <CR><ESC>ggdd$/;"	m
<Space>ls	maps.vim	/^nnoremap <silent> <Space>ls :read $templates\/LatexSlides.txt <CR><ESC>ggdd$/;"	m
<Space>sec	maps.vim	/^nnoremap <Space>sec i\\section{}<Esc>i$/;"	m
<Space>ssec	maps.vim	/^nnoremap <Space>ssec i\\subsection{}<Esc>i$/;"	m
<Space>sssec	maps.vim	/^nnoremap <Space>sssec i\\subsubsection{}<Esc>i$/;"	m
<Space>vp	maps.vim	/^nnoremap <Space>vp i\\vspace{2mm}<ENTER><Esc>$/;"	m
<Tab>	maps.vim	/^vnoremap <Tab> >gv$/;"	m
<Tab>w	maps.vim	/^noremap <Tab>w <C-w><C-w>$/;"	m
<leader>/	maps.vim	/^nnoremap <leader>\/ :call NERDComment(0,"toggle")<CR>$/;"	m
<leader>/	maps.vim	/^vnoremap <leader>\/ :call NERDComment(0,"toggle")<CR>$/;"	m
<leader>f	maps.vim	/^nnoremap <leader>f :NERDTreeFind<CR>$/;"	m
<leader>fb	maps.vim	/^nnoremap <leader>fb <cmd>lua require('telescope.builtin').buffers()<cr>$/;"	m
<leader>ff	maps.vim	/^nnoremap <leader>ff <cmd>lua require('telescope.builtin').find_files()<cr>$/;"	m
<leader>fg	maps.vim	/^nnoremap <leader>fg <cmd>lua require('telescope.builtin').live_grep()<cr>$/;"	m
<leader>fh	maps.vim	/^nnoremap <leader>fh <cmd>lua require('telescope.builtin').help_tags()<cr>$/;"	m
<leader>n	maps.vim	/^nnoremap <leader>n :NERDTree<CR>$/;"	m
<leader>nt	maps.vim	/^nnoremap <leader>nt :tabnew$/;"	m
<leader>t	maps.vim	/^nnoremap <leader>t :NERDTreeToggle<CR>$/;"	m
NeatFoldText	func.vim	/^function! NeatFoldText()$/;"	f
g:NERDSpaceDelims	maps.vim	/^let g:NERDSpaceDelims = 1$/;"	v
g:tabman_toggle	maps.vim	/^let g:tabman_toggle = '<leader>e'$/;"	v
g:tabman_width	maps.vim	/^let g:tabman_width = 35$/;"	v
ii	maps.vim	/^inoremap ii <ESC>$/;"	m
mapleader	maps.vim	/^let mapleader=" "$/;"	v
zx	maps.vim	/^nmap zx :wq<ENTER>$/;"	m
zz	maps.vim	/^nmap zz :q!<ENTER>$/;"	m
